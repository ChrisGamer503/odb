generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model alergia {
  id_alergia      Int               @id(map: "PK__alergia__3D552FE10DB42781") @default(autoincrement())
  nombre_alergia  String?           @db.VarChar(50)
  alergia_jugador alergia_jugador[]
}

model alergia_jugador {
  id_jugador  String    @db.Char(7)
  id_alergia  Int
  descripcion String    @db.VarChar(175)
  activa      Boolean
  alergia     alergia   @relation(fields: [id_alergia], references: [id_alergia], onUpdate: NoAction, map: "fk_alergiaid")
  jugadores   jugadores @relation(fields: [id_jugador], references: [id_jugador], onUpdate: NoAction, map: "fk_alergiajugador")

  @@id([id_jugador, id_alergia], map: "PK__alergia___766ED11C1188AA9E")
}

model categorias {
  id_categoria     String             @id(map: "PK__categori__CD54BC5A3E3992F1") @db.Char(4)
  nombre           String             @db.VarChar(50)
  edadmax          Int?
  edadmin          Int?
  estado           String?            @db.Char(20)
  equipo           equipo[]
  torneo_categoria torneo_categoria[]
}

model equipo {
  id_equipo         String              @id(map: "PK__equipo__EE01F88A19E21FC3") @db.Char(5)
  nombre            String              @db.VarChar(50)
  activo            Boolean
  id_categoria      String?             @db.Char(4)
  categorias        categorias?         @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_idcategoria")
  jugadores         jugadores[]
  orientador_equipo orientador_equipo[]
}

model infracciones {
  id_infraccion           Int                       @id(map: "PK__infracci__BD52EA35352436D4")
  nombre_infraccion       String                    @db.VarChar(50)
  descripcion_infraccion  String                    @db.VarChar(100)
  infracciones_jugador    infracciones_jugador[]    @ignore
  infracciones_orientador infracciones_orientador[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model infracciones_jugador {
  id_infraccion Int
  id_jugador    String       @db.Char(7)
  observacion   String       @db.Char(200)
  infracciones  infracciones @relation(fields: [id_infraccion], references: [id_infraccion], onUpdate: NoAction, map: "fk_infraccionJ")
  jugadores     jugadores    @relation(fields: [id_jugador], references: [id_jugador], onUpdate: NoAction, map: "fk_infraccionjugador")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model infracciones_orientador {
  id_infraccion  Int
  dui_orientador String       @db.VarChar(10)
  observacion    String       @db.Char(200)
  infracciones   infracciones @relation(fields: [id_infraccion], references: [id_infraccion], onUpdate: NoAction, map: "fk_infraccionO")
  orientador     orientador   @relation(fields: [dui_orientador], references: [dui_orientador], onUpdate: NoAction, map: "fk_infraccionorientador")

  @@ignore
}

model jugador_responsable {
  id_jugador      String      @db.Char(7)
  dui_responsable String      @db.VarChar(10)
  parentesco      String?     @db.VarChar(50)
  activo          Boolean
  responsable     responsable @relation(fields: [dui_responsable], references: [dui_responsable], onUpdate: NoAction, map: "fk_duiresponsable")
  jugadores       jugadores   @relation(fields: [id_jugador], references: [id_jugador], onUpdate: NoAction, map: "fk_idjugador")

  @@id([id_jugador, dui_responsable], map: "PK__jugador___B24397BCA8E0D9B6")
}

model jugadores {
  id_jugador               String                 @id(map: "PK__jugadore__75BB83E25797821D") @db.Char(7)
  nombre1                  String                 @db.VarChar(50)
  nombre2                  String?                @db.VarChar(50)
  apellido1                String                 @db.VarChar(50)
  apellido2                String?                @db.VarChar(50)
  fecha_nacimiento         DateTime               @db.Date
  genero                   String                 @db.VarChar(50)
  centro_estudio           String?                @db.VarChar(75)
  direccion                String?                @db.VarChar(255)
  telefono_fijo            String?                @db.VarChar(20)
  telefono_movil           String?                @db.VarChar(20)
  religion                 String?                @db.VarChar(75)
  foto_actual              Bytes?                 @db.Image
  madre                    Boolean?
  numero_partida           String?                @db.VarChar(20)
  numero_folio             String?                @db.VarChar(20)
  numero_libro             String?                @db.VarChar(20)
  a_o_partida              Int?                   @map("año_partida")
  lugar_nacimiento         String?                @db.VarChar(255)
  nombre_madre             String?                @db.VarChar(75)
  nombre_padre             String?                @db.VarChar(75)
  correo                   String?                @db.VarChar(50)
  facebook                 String?                @db.VarChar(50)
  asiste_iglesia           Boolean?
  grupo_familiar           Int?
  primera_dosis            Boolean?
  segunda_dosis            Boolean?
  tercera_dosis            Boolean?
  autorizacion_traslado    Boolean?
  grado_estudio            String?                @db.VarChar(50)
  turno_estudio            String?                @db.VarChar(50)
  direccion_centro_estudio String?                @db.VarChar(255)
  bautizo                  Boolean?
  comunion                 Boolean?
  confirmacion             Boolean?
  dui_jugador              String?                @db.VarChar(10)
  fecha_inscripcion        DateTime?              @db.Date
  activo                   Boolean
  id_equipo                String?                @db.Char(5)
  alergia_jugador          alergia_jugador[]
  infracciones_jugador     infracciones_jugador[] @ignore
  jugador_responsable      jugador_responsable[]
  equipo                   equipo?                @relation(fields: [id_equipo], references: [id_equipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipoid")
}

model orientador {
  dui_orientador           String                    @id(map: "PK__orientad__09F16CB5849BE2E6") @db.VarChar(10)
  nombre_orientador        String                    @db.VarChar(75)
  direccion_orientador     String?                   @db.VarChar(75)
  telefono_fijo_orientador String?                   @db.VarChar(20)
  fecha_nacimiento         DateTime?                 @db.Date
  lugar_nacimiento         String?                   @db.VarChar(75)
  nombre_madre             String?                   @db.VarChar(75)
  nombre_padre             String?                   @db.VarChar(75)
  nombre_espos_            String?                   @map("nombre_espos@") @db.VarChar(75)
  correo_electronico       String?                   @db.VarChar(75)
  facebook                 String?                   @db.VarChar(75)
  grupo_familiar           Int?
  religion                 String?                   @db.VarChar(50)
  asiste_iglesia           Boolean
  bautizo                  Boolean?
  comunion                 Boolean?
  confirmacion             Boolean
  primera_dosis            Boolean?
  segunda_dosis            Boolean?
  tercera_dosis            Boolean?
  estudios_academicos      String?                   @db.VarChar(75)
  otros_estudios           String?                   @db.VarChar(75)
  lugar_trabajo            String?                   @db.VarChar(75)
  fecha_inscripcion        DateTime?                 @db.Date
  infracciones_orientador  infracciones_orientador[] @ignore
  orientador_equipo        orientador_equipo[]
}

model orientador_equipo {
  dui_orientador String     @db.VarChar(10)
  id_equipo      String     @db.Char(5)
  rol            String     @db.VarChar(50)
  equipo         equipo     @relation(fields: [id_equipo], references: [id_equipo], onUpdate: NoAction, map: "fk_idequipo")
  orientador     orientador @relation(fields: [dui_orientador], references: [dui_orientador], onUpdate: NoAction, map: "fk_orientadorequipo")

  @@id([dui_orientador, id_equipo], map: "PK__orientad__B711733D7E557796")
}

model responsable {
  dui_responsable     String                @id(map: "PK__responsa__7F8145ED38D43491") @db.VarChar(10)
  nombre1             String                @db.VarChar(50)
  nombre2             String?               @db.VarChar(50)
  apellido1           String                @db.VarChar(50)
  apellido2           String?               @db.VarChar(50)
  movil_responsable   String?               @db.VarChar(20)
  fijo_responsable    String?               @db.VarChar(20)
  jugador_responsable jugador_responsable[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61D2AD74D1") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model torneo {
  id_torneo        String             @id(map: "PK__torneo__DBB62AF866E5C414") @db.Char(6)
  nombre_torneo    String             @db.VarChar(75)
  a_o              Int?               @map("año")
  fecha_inicio     DateTime           @default(dbgenerated("CONVERT([date],getdate())"), map: "DF__torneo__fecha_in__4E88ABD4") @db.Date
  fecha_cierre     DateTime           @db.Date
  estado           String?            @db.Char(20)
  torneo_categoria torneo_categoria[]
}

model torneo_categoria {
  id_torneo    String     @db.Char(6)
  id_categoria String     @db.Char(4)
  participo    Boolean
  categorias   categorias @relation(fields: [id_categoria], references: [id_categoria], onUpdate: NoAction, map: "fk_id_categoria")
  torneo       torneo     @relation(fields: [id_torneo], references: [id_torneo], onUpdate: NoAction, map: "fk_torneoid")

  @@id([id_torneo, id_categoria], map: "PK__torneo_c__6763613D0E31B95D")
}
